-- Select Statments
--1
SELECT FIRST_NAME, LAST_NAME, EMAIL, PRIMARY_DEPT 
FROM TEACHER
ORDER BY LAST_NAME;

--2
SELECT FIRST_NAME ||' '|| LAST_NAME AS "Student_Full_Name"
FROM STUDENT
WHERE SUBSTR(FIRST_NAME, 1 , 1) IN  ('O','W','Z')
ORDER BY LAST_NAME DESC;

--3
SELECT UTEID, DATE_OF_BIRTH, PRIMARY_COLLEGE_CODE, CGPA
FROM STUDENT
WHERE CGPA > 3.0 AND DATE_OF_BIRTH >= '01-JAN-2000' AND DATE_OF_BIRTH <= '31-DEC-2004' AND Primary_College_Code = 'B' 
ORDER BY date_of_birth desc;

--4
SELECT UTEID, DATE_OF_BIRTH, PRIMARY_COLLEGE_CODE, CGPA
FROM STUDENT
WHERE (CGPA >3.0 AND DATE_OF_BIRTH BETWEEN '01-JAN-00' AND '12-DEC-04') 
    AND Primary_College_Code = 'B' 
ORDER BY DATE_OF_BIRTH desc;

--5
SELECT COURSE_ID, UNIQUE_NUMBER, SEMESTER_CODE, SECTION_DAY, (LENGTH_MINUTES/60) AS "HOURS"
FROM SECTION 
WHERE SECTION_DAY IN( 'M','W','MW')
    AND ROWNUM <=5
ORDER BY HOURS DESC;

--6
SELECT UTEID, 
    LAST_NAME, 
    CLASSIFICATION, 
    DATE_OF_BIRTH, 
    PHONE, 
    ROUND((SYSDATE - DATE_OF_BIRTH)/365) AS AGE_TODAY
FROM STUDENT
WHERE CLASSIFICATION IN ('3','4') AND ROUND((SYSDATE - DATE_OF_BIRTH)/365,0) >21
ORDER BY AGE_TODAY DESC;

--7
SELECT DISTINCT SEMESTER_CODE, SECTION_DAY, SECTION_HOUR
FROM SECTION
ORDER BY 2, 3 ASC;

--8
SELECT SYSDATE AS "today_unformatted",
       TO_CHAR(SYSDATE, 'MM/DD/YYYY') AS today_formatted,
       'Bright Future University' AS Name_Of_University,
       10000 AS Total_Students,
       225 AS Total_Faculty,
       FLOOR (10000/255) AS Students_Per_Faculty_R1,  
       CEIL (10000/255) AS Students_Per_Faculty_R2 
FROM Dual;

--9
SELECT*
FROM ROOM
WHERE FLOOR = 2
ORDER BY MAX_SEATS DESC
FETCH FIRST 4 ROWS ONLY;


--10 
SELECT s.UTEID, FIRST_NAME, LAST_NAME, EMAIL, CLASSIFICATION, STATE_REGION as STATE, CITY, CGPA, ADDRESS_TYPE_CODE
FROM STUDENT s JOIN STUDENT_ADDRESS_LINKING sal 
ON s.UTEID = sal.UTEID
JOIN ADDRESS a 
ON sal.address_id = a.address_id
WHERE ADDRESS_TYPE_CODE = 'H' AND STATE_REGION = 'TX'
ORDER BY STATE_REGION, CITY, CGPA DESC;

--11
SELECT COURSE_CODE || ' - ' || COURSE_NAME ||' (Time: '|| SECTION_HOUR||') - Prof. '|| LAST_NAME AS "Course Information"
FROM COURSE c JOIN Section s 
    ON c.COURSE_ID = s.COURSE_ID
JOIN TEACHER t 
    ON t.UTEID = s.INSTRUCTOR_UTEID
WHERE SECTION_DAY = 'TTH' AND SEMESTER_CODE = 'FA22';

--12 
SELECT s.UTEID, first_name, last_name, email, major_id, date_declared
FROM student s LEFT JOIN major_student_linking msl 
    ON s.UTEID = msl.UTEID
WHERE msl.major_id IS NULL;

--13
    SELECT '1st class Honor' AS Honor_Level, First_Name, Last_Name, Email
    FROM STUDENT
    WHERE CGPA >=3.9
UNION
    SELECT '2nd class Honor' AS Honor_Level, First_Name, Last_Name, Email
    FROM STUDENT
    WHERE CGPA >= 3.7 AND CGPA < 3.9
UNION
    SELECT '3rd class Honor' AS Honor_Level, First_Name, Last_Name, Email
    FROM STUDENT
    WHERE CGPA >= 3.5 AND CGPA < 3.7
UNION
    SELECT 'On track to graduate' AS Honor_Level, First_Name, Last_Name, Email
    FROM STUDENT
    WHERE CGPA >= 2.0 AND CGPA < 3.5
ORDER BY 1,3;

-- Joins and Subquries
--1
SELECT COUNT(*) AS count_of_student, 
       MIN(CGPA) AS min_student_CGPA,
       MAX(CGPA) AS max_student_CGPA
FROM STUDENT;

--2
SELECT LAST_NAME, COURSE_CODE, COUNT(SECTION_ID) AS NUMBER_OF_CLASSES
FROM TEACHER T JOIN SECTION S ON T.UTEID = S.INSTRUCTOR_UTEID
        JOIN COURSE C ON S.COURSE_ID = C.COURSE_ID
WHERE SUBSTR(COURSE_CODE,1,3) IN ('MIS','ACC') AND SEMESTER_CODE IN ('FA22')
GROUP BY COURSE_CODE, LAST_NAME
ORDER BY LAST_NAME;

--3
SELECT MAJOR_CODE, CLASSIFICATION, ROUND(AVG(CGPA) ,2) AS average_CGPA
FROM MAJOR M JOIN MAJOR_STUDENT_LINKING MSL ON M.MAJOR_ID = MSL.MAJOR_ID
     JOIN STUDENT S ON MSL.UTEID = S.UTEID
GROUP BY MAJOR_CODE, CLASSIFICATION
ORDER BY average_CGPA DESC;

--4
SELECT PRIMARY_COLLEGE_CODE AS "College Code" , 
       FIRST_NAME ||' '|| LAST_NAME AS NAME, 
       COUNT(COURSE_ID) AS NUMBER_OF_COURSE
FROM STUDENT S JOIN ENROLLMENT E ON S.UTEID = E.UTEID
     JOIN SECTION SE ON E.SECTION_ID = SE.SECTION_ID
WHERE SECTION_DAY IN ('MW') AND SEMESTER_CODE IN ('FA22')
GROUP BY PRIMARY_COLLEGE_CODE, FIRST_NAME ||' '|| LAST_NAME
ORDER BY NAME;

--5
SELECT PRIMARY_COLLEGE_CODE AS "College Code" , 
       FIRST_NAME ||' '|| LAST_NAME AS NAME, 
       COUNT(COURSE_ID) AS NUMBER_OF_COURSE
FROM STUDENT S JOIN ENROLLMENT E ON S.UTEID = E.UTEID
     JOIN SECTION SE ON E.SECTION_ID = SE.SECTION_ID
WHERE SECTION_DAY IN ('MW') AND SEMESTER_CODE IN ('FA22')
GROUP BY PRIMARY_COLLEGE_CODE, FIRST_NAME ||' '|| LAST_NAME
HAVING COUNT(COURSE_ID) >= 2
ORDER BY NAME;

--6
SELECT CITY, ZIP_POSTAL_CODE, COUNT(S.UTEID) AS Number_of_students
FROM ADDRESS A JOIN STUDENT_ADDRESS_LINKING ASL ON A.ADDRESS_ID = ASL.ADDRESS_ID
     JOIN STUDENT S ON ASL.UTEID = S.UTEID
WHERE CITY NOT IN ('New Dehli','Beijing')
GROUP BY ROLLUP(CITY, ZIP_POSTAL_CODE);

--7
SELECT MAJOR_CODE, COUNT(S.UTEID) AS number_students
FROM MAJOR M JOIN MAJOR_STUDENT_LINKING MSL ON M.MAJOR_ID = MSL.MAJOR_ID
    JOIN STUDENT S ON MSL.UTEID = S.UTEID
WHERE INTERNATIONAL_FLAG IN ('N')
GROUP BY MAJOR_CODE
HAVING COUNT(S.UTEID) >1
ORDER BY number_students DESC;

--8
select UTEID
from STUDENT
WHERE UTEID NOT IN 
    (Select distinct (uteid)
    from major_student_linking);

--9
SELECT FIRST_NAME, LAST_NAME, EMAIL, ROUND((SYSDATE - DATE_OF_BIRTH)/365) AS AGE, CGPA
FROM STUDENT
WHERE CGPA >
    (SELECT AVG(CGPA)
    FROM STUDENT)
ORDER BY AGE ASC, CGPA DESC;

--10
SELECT UTEID, 
       number_of_sections , 
       total_minutes, 
       total_minutes/number_of_sections as avg_minutes_per_section
FROM(
SELECT UTEID, COUNT(s.SECTION_ID) AS number_of_sections, SUM(length_minutes) AS total_minutes
    FROM SECTION s JOIN ENROLLMENT e ON s.SECTION_ID = e.SECTION_ID
    GROUP BY UTEID 
    ) 
ORDER BY avg_minutes_per_section DESC;

--11
SELECT UTEID, first_name, last_name, primary_dept, office_phone 
FROM TEACHER 
WHERE primary_dept = 'COE' OR uteid in
    (
    SELECT DISTINCT INSTRUCTOR_UTEID
    FROM SECTION
    WHERE SECTION_DAY IN ('M','W','MW','MWF'))
ORDER BY primary_dept, last_name;


--12
SELECT FIRST_NAME, LAST_NAME, EMAIL, CLASSIFICATION, CGPA, TOTAL_SECTION
FROM STUDENT s 
JOIN (
    SELECT UTEID , COUNT(SECTION_ID) AS total_section
    FROM ENROLLMENT e
    GROUP BY UTEID
    ) e
ON s.UTEID = e.UTEID
WHERE CLASSIFICATION = '4' AND CGPA < 2.5
ORDER BY CGPA ASC, TOTAL_SECTION DESC;

